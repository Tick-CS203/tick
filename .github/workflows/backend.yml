name: backend

on:
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build jar
        run: |
          echo Building jar
          backend/build.sh

      - name: Build image
        run: |
          echo Building images
          cd backend && docker compose build

      - name: Export image to Amazon
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          echo Exporting to Amazon
          cd backend
          folders=$(ls -d */)
          echo "All images to push: ${folders}"
          images=`docker images --format "{{.Repository}}@@{{.Tag}}"`
          for image in ${folders}; do
            image=${image%/}
            echo "Uploading ${image}"
            line=`echo $images | grep -o "$image@@[^ ]* "`
            tag=${line##*@@};
            repourl=$ECR_REGISTRY/$image
            echo "repourl=${repourl}"
            docker tag $image:$tag $repourl
            docker push $repourl
            docker rmi $image:$tag $repourl
            echo "Removed images ${image}:${tag} and ${repourl}"
          done
